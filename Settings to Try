SETTINGS TO TRY:

LVL2.sin_spiral(50, 1, rotate=2, rotaterate=20, cosine=True)

LVL2.layered_flowers(layers=250, npetals=6, innerdepth=1, sizefactor=0.5, rotate=1, colors=rainbow1)

LVL2.sin_avg_point_rotation(32, 5, 0, rotate=90, rotaterate=1,ampshift=5, colors=rainbow1, length=30)

RadialAngularPattern(300, [[90, 2], [120, 2]], jank=0, turncycle=5, pensize=1, showcenter=False, colors=rainbow1, position=[0, 0], penup=False)











COLOR SCHEMES:


#               r          o            y          yg           g           bg          b           b           p           v          r
rainbow = {'r': [[255, 255], [255, 255], [255, 220], [220,  75], [75,    3], [3,     3], [3,    30], [30,  125], [125, 220], [220, 255]],
           'g': [[0,   150], [150, 255], [255, 255], [255, 255], [255, 255], [255, 145], [145,   3], [3,     3], [3,     3], [3,     0]],
           'b': [[0,     0], [0,     0], [0,     3], [3,     3], [3,   240], [240, 255], [255, 255], [255, 255], [255, 255], [255,   0]]}

bluepinkpurp = {'r': [[0, 255], [255, 150], [150, 200]],
                'g': [[145, 0]],
                'b': [[255, 150], [150, 255]]}

peacock = {'r': [[0, 255], [255, 150], [150, 200]],
           'g': [[0, 145], [145, 150], [150, 0]],
           'b': [[255, 150], [150, 255]]}



these color scheme dictionaries must be put into a ColorScheme object, like this:

rainbow1 = ColorSchemeDict(rainbow, 260)
                            ^        ^
                color dictionary    number of colors to generate





Demo / Test Stuff:

  # LVL2.layered_flowers(colors=whiteish, rotate=2)
    # LVL2.spiral_spiral(30, colors=whiteish, diameter=20)
    # LVL2.iterative_rotation(Rectangle, colors=rainbow1)

    # LVL2.random_iterative_rotation(colors=rainbow)

    # LVL2.iterative_rotation(Rectangle, reps=94, xshift=0.5, yshift=1.2, stretch=20.33, length=10, depth=6, stretchshift=-1, lenshift=1, depthshift=1, individualrotation=0.72, rotationcenter=(-212, -29), branches=5, colors=rainbow1)

    # tt1 = TimesTable(300, 200, 2, 200, color=rainbow1, rotation=0)
    # tt1.draw()

    # flower1 = FlowerPattern2(8, 3, 10, reps=80)
    # DrawPath(flower1, colors=rainbow1)

    # flwrcld = Transform(flower1).generatepointcloud(5, 5)
    # DrawPath(flwrcld, dots=True, lines=False)
    # flower1 = SpiralPattern(1, 80)
    # for i in range(20):
    #     DrawPath(flower1, colors=darkgrays[i], pensize=5)
    #     flower1 = Transform(flower1).origin_rotate(15)
    #     flower1 = Transform(flower1).xscale(1.1)
    #     flower1 = Transform(flower1).yscale(1.1)
    #     # flower1 = Transform(flower1). xshift(3)

    # cld1 = Transform(flower1).generatepointcloud(10, 5)
    # cld2 = Tr/ansform(flower2).generatepointcloud(10, 5)
    # cld3 = Transform(flower3).generatepointcloud(10, 5)
    # DrawPath(flower1, colors=rainbow1)
    # DrawPath(cld1, lines=False, dots=True, colors='orange')
    # DrawPath(cld2, lines=False, dots=True, colors='gold')
    # DrawPath(cld3, lines=False, dots=True)

    # for i in range(20):
    #     tt1 = TimesTable(300, 200, 1, 200, color=rainbow1)
    #     tt2 = TimesTable(300 - (i * 2), 200, 2, 200, color=rainbow1, rotation=i*2)
    #     tt1.draw()
    #     tt2.draw()

    # tt1.draw(drawcircle=True)

    # CL1 = CascadeLines(nlines=200, lengthrange=(2, 1000), distrange=(10, 800), pensizerange=(1, 10), rotation=10, color='white', position=(0, 0))
    # DrawPath(CL1, colors=rainbow1, pensize=(1, 20))
    #

    # tt2 = TimesTable(300, 200, 3, 200, color=rainbow1, rotation=180)
    # tt2.draw()

    # DrawPath(flower1, colors=rainbow1, colordist=40)

    # wav1 = Wave(stretch=100, height=300, length=10, cosin=True, pensize=1)
    # print(len(wav1))
    # wav1 = Transform(wav1).addpoints(5, 10)
    # cloud1 = Transform(wav1).generatepointcloud(10, 2)
    # DrawPath(cloud1, lines=False, dots=True, dotsize=1)
    # DrawPath(wav1, 2, rainbow1)

    #
    # ra1 = RadialAngularPattern(300, [[125, 2], [75, 5]], jank=0, turncycle=5, pensize=3, showcenter=False, colors=rainbow1, position=[0, 0], penup=False)
    # ra1.drawpath()
    # ra2 = Transform(ra1).addpoints(10, 50)
    # print(len(ra2))
    # cld1 = Transform(ra2).generatepointcloud(10, 10)
    # DrawPath(cld1, lines=True, dots=False, colors=darkgrays, pensize=2)
    # DrawPath(cld2, lines=True, dots=False, colors=rainbow1)
    # DrawPath(cld1, lines=False, dots=True, dotsize=1, colors=whiteish)
    # ra1.drawpath()
    # DrawPath(ra2, colors=rainbow1)